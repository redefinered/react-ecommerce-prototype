{"ast":null,"code":"var _jsxFileName = \"/Users/reddeguzman/Code/crwn-clothing-ecommerce-react-prototype/src/components/sign-up/sign-up.component.jsx\";\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-alert */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FormInput from 'components/form-input/form-input.component';\nimport CustomButton from 'components/custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { Creators as UserActionCreators } from 'modules/ducks/user/user.actions';\nimport { selectCurrentUser } from 'modules/ducks/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n      const signUpAction = this.props.signUpAction;\n\n      if (password !== confirmPassword) {\n        alert('passwords do not match');\n        return;\n      }\n\n      signUpAction({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentUser === null && this.props.currentUser) {\n      // at this point there is a successful log-in\n      this.setState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"SIGN UP\")));\n  }\n\n}\n\nSignUp.propTypes = {\n  currentUser: PropTypes.object,\n  signUpAction: PropTypes.func\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\nconst actions = {\n  signUpAction: UserActionCreators.signUp\n};\nexport default connect(mapStateToProps, actions)(SignUp);","map":{"version":3,"sources":["/Users/reddeguzman/Code/crwn-clothing-ecommerce-react-prototype/src/components/sign-up/sign-up.component.jsx"],"names":["React","PropTypes","FormInput","CustomButton","connect","Creators","UserActionCreators","selectCurrentUser","createStructuredSelector","SignUp","Component","constructor","handleSubmit","event","preventDefault","state","displayName","email","password","confirmPassword","signUpAction","props","alert","handleChange","target","name","value","setState","componentDidUpdate","prevProps","currentUser","render","propTypes","object","func","mapStateToProps","actions","signUp"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-alert */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormInput from 'components/form-input/form-input.component';\nimport CustomButton from 'components/custom-button/custom-button.component';\n\nimport { connect } from 'react-redux';\nimport { Creators as UserActionCreators } from 'modules/ducks/user/user.actions';\nimport { selectCurrentUser } from 'modules/ducks/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\n\nimport './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentUser === null && this.props.currentUser) {\n      // at this point there is a successful log-in\n      this.setState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    }\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const { displayName, email, password, confirmPassword } = this.state;\n    const { signUpAction } = this.props;\n\n    if (password !== confirmPassword) {\n      alert('passwords do not match');\n      return;\n    }\n\n    signUpAction({ displayName, email, password });\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <div className=\"sign-up\">\n        <h2 className=\"title\">I do not have a account</h2>\n        <span>Sign up with your email and password</span>\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            onChange={this.handleChange}\n            label=\"Display Name\"\n            required\n          />\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            label=\"Email\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            label=\"Password\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label=\"Confirm Password\"\n            required\n          />\n          <CustomButton type=\"submit\">SIGN UP</CustomButton>\n        </form>\n      </div>\n    );\n  }\n}\n\nSignUp.propTypes = {\n  currentUser: PropTypes.object,\n  signUpAction: PropTypes.func\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst actions = {\n  signUpAction: UserActionCreators.signUp\n};\n\nexport default connect(mapStateToProps, actions)(SignUp);\n"]},"metadata":{},"sourceType":"module"}