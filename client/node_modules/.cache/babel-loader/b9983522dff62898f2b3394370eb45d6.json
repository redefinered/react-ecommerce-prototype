{"ast":null,"code":"var _jsxFileName = \"/Users/reddeguzman/Code/crwn-clothing-ecommerce-react-prototype/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from 'components/custom-button/custom-button.component';\nimport CartItem from 'components/cart-item/cart-item.component';\nimport { selectCartItems } from 'modules/ducks/cart/cart.selectors';\nimport { Creators as CartActionCreators } from 'modules/ducks/cart/cart.actions';\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 37\n  }\n})) : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"empty-message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }\n}, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    this.props.toggleCartHidden();\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nconst actions = {\n  toggleCartHidden: CartActionCreators.toggleCartHidden\n};\nCartDropdown.propTypes = {\n  cartItems: PropTypes.array,\n  history: PropTypes.object,\n  dispatch: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, actions)(CartDropdown));","map":{"version":3,"sources":["/Users/reddeguzman/Code/crwn-clothing-ecommerce-react-prototype/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","PropTypes","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","Creators","CartActionCreators","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","props","toggleCartHidden","mapStateToProps","actions","propTypes","array","object","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,QAAQ,IAAIC,kBAArB,QAA+C,iCAA/C;AAEA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAeC,QAAD,iBAAc,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA5B,CADD,gBAGC;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CADF,eAQE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACA,SAAKC,KAAL,CAAWC,gBAAX;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADF;;AAoBA,MAAMC,eAAe,GAAGlB,wBAAwB,CAAC;AAC/CQ,EAAAA,SAAS,EAAEJ;AADoC,CAAD,CAAhD;AAIA,MAAMe,OAAO,GAAG;AACdF,EAAAA,gBAAgB,EAAEX,kBAAkB,CAACW;AADvB,CAAhB;AAIAV,YAAY,CAACa,SAAb,GAAyB;AACvBZ,EAAAA,SAAS,EAAEV,SAAS,CAACuB,KADE;AAEvBZ,EAAAA,OAAO,EAAEX,SAAS,CAACwB,MAFI;AAGvBZ,EAAAA,QAAQ,EAAEZ,SAAS,CAACyB;AAHG,CAAzB;AAMA,eAAetB,UAAU,CAACF,OAAO,CAACmB,eAAD,EAAkBC,OAAlB,CAAP,CAAkCZ,YAAlC,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport CustomButton from 'components/custom-button/custom-button.component';\nimport CartItem from 'components/cart-item/cart-item.component';\nimport { selectCartItems } from 'modules/ducks/cart/cart.selectors';\nimport { Creators as CartActionCreators } from 'modules/ducks/cart/cart.actions';\n\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <div className=\"cart-dropdown\">\n    <div className=\"cart-items\">\n      {cartItems.length ? (\n        cartItems.map((cartItem) => <CartItem key={cartItem.id} item={cartItem} />)\n      ) : (\n        <span className=\"empty-message\">Your cart is empty</span>\n      )}\n    </div>\n    <CustomButton\n      onClick={() => {\n        history.push('/checkout');\n        this.props.toggleCartHidden();\n      }}\n    >\n      GO TO CHECKOUT\n    </CustomButton>\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst actions = {\n  toggleCartHidden: CartActionCreators.toggleCartHidden\n};\n\nCartDropdown.propTypes = {\n  cartItems: PropTypes.array,\n  history: PropTypes.object,\n  dispatch: PropTypes.func\n};\n\nexport default withRouter(connect(mapStateToProps, actions)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}